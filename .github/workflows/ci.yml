name: CI
on:
  push:
    branches: [master, next]
  pull_request:

jobs:
  check-commits:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch all history
          fetch-depth: 0

      - name: Check commit messages
        run: |
          scripts/check-commits.sh ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Shellcheck
        run: |
          shellcheck scripts/*.sh

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # https://github.com/actions/cache/blob/v2.1.5/examples.md#node---yarn-2
      - uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check yarn lockfile
        run: |
          yarn dedupe -c

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Run codegen
        run: |
          yarn workspace @rctf/api-types build

      - name: Prettier
        run: |
          yarn prettier -c .

      - name: Lint
        run: |
          yarn lint --max-warnings=0

      - name: Typecheck
        run: |
          yarn typecheck

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [14]
        postgres: [12]
        redis: [6]
        os: [ubuntu-latest]
        include:
          - node: 15
            postgres: 12
            redis: 6
            os: ubuntu-latest
          - node: 14
            postgres: 13
            redis: 6
            os: ubuntu-latest
          - node: 14
            postgres: 12
            redis: 6
            os: windows-latest
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      redis:
        image: redis:${{ matrix.redis }}
        ports:
          - 6379:6379
    env:
      RCTF_DATABASE_URL: postgres://postgres:password@localhost/rctf
      RCTF_REDIS_URL: redis://@localhost:6379/0
      RCTF_TOKEN_KEY: 32_byte_long_base64_encoded_value_for_token
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # https://github.com/actions/cache/blob/v2.1.5/examples.md#node---yarn-2
      - uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Build
        run: |
          yarn build

      - name: Create DB
        run: |
          psql postgres://postgres:password@localhost -c 'CREATE DATABASE rctf;'

      - name: Run migrations
        run: |
          yarn workspace @rctf/server migrate

      - name: Run tests
        id: testrun
        run: |
          yarn test:report --ci --forceExit --color

      - name: Upload coverage reports
        if: always() && ((steps.testrun.outcome == 'success') || (steps.testrun.outcome == 'failure'))
        uses: codecov/codecov-action@v1

  docker-build:
    runs-on: ubuntu-latest
    needs:
      - shellcheck
      - lint
      - test

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/v2.1.5/examples.md#node---yarn-2
      - uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        uses: docker://docker/github-actions:v1
        with:
          args: build
          path: .
          repository: redpwn/rctf
          tags: ${{ github.sha }}
          cache_froms: redpwn/rctf:master

      - name: Login
        # TODO: handle tagging releases correctly
        if: github.ref == 'refs/heads/master'
        uses: docker://docker/github-actions:v1
        with:
          args: build
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Push
        # TODO: handle tagging releases correctly
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag redpwn/rctf:${{ github.sha }} redpwn/rctf:master
          docker push redpwn/rctf:${{ github.sha }}
          docker push redpwn/rctf:master
